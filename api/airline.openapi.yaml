# yaml-language-server: $schema=https://spec.openapis.org/oas/3.0/schema/2024-10-18
openapi: 3.0.0
info:
  title: Stellora Airline API
  version: 1.0.0
paths:
  /health:
    get:
      operationId: healthCheck
      summary: Health check endpoint
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /aircraft:
    get:
      operationId: listAircraft
      summary: List all aircraft
      responses:
        '200':
          description: List of aircraft
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aircraft'
    post:
      operationId: createAircraft
      summary: Create a new aircraft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                registration:
                  $ref: '#/components/schemas/AircraftRegistration'
                aircraftType:
                  $ref: '#/components/schemas/AircraftTypeICAOCode'
                airline:
                  $ref: '#/components/schemas/AirlineSpec'
              required:
                - registration
                - aircraftType
                - airline
      responses:
        '201':
          description: Aircraft created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aircraft'
        '400':
          description: Invalid request
    delete:
      operationId: deleteAllAircraft
      summary: Delete all aircraft
      responses:
        '204':
          description: All aircraft deleted
  /aircraft/{aircraftSpec}:
    get:
      operationId: getAircraft
      summary: Get aircraft by ID or registration
      parameters:
        - $ref: '#/components/parameters/aircraftSpec'
      responses:
        '200':
          description: Aircraft found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aircraft'
        '404':
          description: Aircraft not found
    patch:
      operationId: updateAircraft
      summary: Update aircraft
      parameters:
        - $ref: '#/components/parameters/aircraftSpec'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                registration:
                  $ref: '#/components/schemas/AircraftRegistration'
                aircraftType:
                  $ref: '#/components/schemas/AircraftTypeICAOCode'                
                airline:
                  $ref: '#/components/schemas/AirlineSpec'
      responses:
        '200':
          description: Aircraft updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aircraft'
        '404':
          description: Aircraft not found
    delete:
      operationId: deleteAircraft
      summary: Delete an aircraft
      parameters:
        - $ref: '#/components/parameters/aircraftSpec'
      responses:
        '204':
          description: Aircraft deleted
        '404':
          description: Aircraft not found
  /airlines/{airlineSpec}/aircraft:
    get:
      operationId: listAircraftByAirline
      summary: List all aircraft owned by an airline
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
      responses:
        '200':
          description: List of aircraft
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aircraft'
        '404':
          description: Airline not found
  /airlines/{airlineSpec}/fleets:
    get:
      operationId: listFleetsByAirline
      summary: List all fleets for an airline
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
      responses:
        '200':
          description: List of fleets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fleet'
        '404':
          description: Airline not found
    post:
      operationId: createFleet
      summary: Create a new fleet
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  $ref: '#/components/schemas/FleetCode'
                description:
                  type: string
              required:
                - code
                - description
      responses:
        '201':
          description: Fleet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '404':
          description: Airline not found
  /airlines/{airlineSpec}/fleets/{fleetSpec}:
    get:
      operationId: getFleet
      summary: Get a fleet by ID or code
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
        - $ref: '#/components/parameters/fleetSpec'
      responses:
        '200':
          description: Fleet found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '404':
          description: Fleet not found
    patch:
      operationId: updateFleet
      summary: Update a fleet
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
        - $ref: '#/components/parameters/fleetSpec'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  $ref: '#/components/schemas/FleetCode'
                description:
                  type: string
      responses:
        '200':
          description: Fleet updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fleet'
        '404':
          description: Fleet not found
    delete:
      operationId: deleteFleet
      summary: Delete a fleet
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
        - $ref: '#/components/parameters/fleetSpec'
      responses:
        '204':
          description: Fleet deleted
        '404':
          description: Fleet not found
  /airlines/{airlineSpec}/fleets/{fleetSpec}/aircraft:
    get:
      operationId: listAircraftByFleet
      summary: List aircraft in a fleet
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
        - $ref: '#/components/parameters/fleetSpec'
      responses:
        '200':
          description: List of aircraft in the fleet
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aircraft'
        '404':
          description: Fleet or airline not found
  /airlines/{airlineSpec}/fleets/{fleetSpec}/aircraft/{aircraftSpec}:
    put:
      operationId: addAircraftToFleet
      summary: Add an aircraft to a fleet
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
        - $ref: '#/components/parameters/fleetSpec'
        - $ref: '#/components/parameters/aircraftSpec'
      responses:
        '200':
          description: Aircraft added to fleet (or aircraft was already in the fleet)
        '400':
          description: Invalid request
        '404':
          description: Aircraft, fleet, or airline not found
    delete:
      operationId: removeAircraftFromFleet
      summary: Remove an aircraft from a fleet
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
        - $ref: '#/components/parameters/fleetSpec'
        - $ref: '#/components/parameters/aircraftSpec'
      responses:
        '204':
          description: Aircraft removed from fleet (or aircraft was not in fleet)
        '400':
          description: Invalid request
        '404':
          description: Aircraft, fleet, or airline not found
  /aircraft-types:
    get:
      operationId: listAircraftTypes
      summary: List all aircraft types
      responses:
        '200':
          description: List of aircraft types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AircraftType'
  /airports:
    get:
      operationId: listAirports
      summary: List all airports
      responses:
        '200':
          description: List of airports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Airport'
    post:
      operationId: createAirport
      summary: Create a new airport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iataCode:
                  $ref: '#/components/schemas/AirportIATACode'
              required:
                - iataCode
      responses:
        '201':
          description: Airport created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
        '400':
          description: Invalid request
    delete:
      operationId: deleteAllAirports
      summary: Delete all airports
      responses:
        '204':
          description: All airports deleted
  /airports/{airportSpec}:
    get:
      operationId: getAirport
      summary: Get airport by ID or IATA code
      parameters:
        - $ref: '#/components/parameters/airportSpec'
      responses:
        '200':
          description: Airport found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
        '404':
          description: Airport not found
    patch:
      operationId: updateAirport
      summary: Update airport
      parameters:
        - $ref: '#/components/parameters/airportSpec'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iataCode:
                  $ref: '#/components/schemas/AirportIATACode'                
      responses:
        '200':
          description: Airport updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airport'
        '404':
          description: Airport not found
    delete:
      operationId: deleteAirport
      summary: Delete an airport
      parameters:
        - $ref: '#/components/parameters/airportSpec'
      responses:
        '204':
          description: Airport deleted
        '404':
          description: Airport not found
  /airports/{airportSpec}/schedules:
    get:
      operationId: listSchedulesByAirport
      summary: List schedules that depart from or arrive at an airport
      parameters:
        - $ref: '#/components/parameters/airportSpec'
      responses:
        '200':
          description: Schedules by airport
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '404':
          description: Airport not found
  /airlines:
    get:
      operationId: listAirlines
      summary: List all airlines
      responses:
        '200':
          description: List of airlines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Airline'
    post:
      operationId: createAirline
      summary: Create a new airline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iataCode:
                  $ref: '#/components/schemas/AirlineIATACode'
                name:
                  type: string
              required:
                - iataCode
                - name
      responses:
        '201':
          description: Airline created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airline'
        '400':
          description: Invalid request
    delete:
      operationId: deleteAllAirlines
      summary: Delete all airlines
      responses:
        '204':
          description: All airlines deleted
  /airlines/{airlineSpec}:
    get:
      operationId: getAirline
      summary: Get airline by ID or IATA code
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
      responses:
        '200':
          description: Airline found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airline'
        '404':
          description: Airline not found
    patch:
      operationId: updateAirline
      summary: Update airline
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                iataCode:
                  $ref: '#/components/schemas/AirlineIATACode'
                name:
                  type: string
      responses:
        '200':
          description: Airline updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Airline'
        '404':
          description: Airline not found
    delete:
      operationId: deleteAirline
      summary: Delete an airline
      parameters:
        - name: airlineSpec
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AirlineSpec'
      responses:
        '204':
          description: Airline deleted
        '404':
          description: Airline not found
  /airlines/{airlineSpec}/schedules:
    get:
      operationId: listSchedulesByAirline
      summary: List schedules for an airline
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
      responses:
        '200':
          description: List of schedules by airline
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '404':
          description: Airline not found
  /airlines/{airlineSpec}/flights:
    get:
      operationId: listFlightsByAirline
      summary: List flights for an airline
      parameters:
        - $ref: '#/components/parameters/airlineSpec'
      responses:
        '200':
          description: List of flights by airline
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
        '404':
          description: Airline not found
  /schedules:
    get:
      operationId: listSchedules
      summary: List all schedules
      responses:
        '200':
          description: List of schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
    post:
      operationId: createSchedule
      summary: Create a new schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                airline:
                  $ref: '#/components/schemas/AirlineSpec'
                number:
                  $ref: '#/components/schemas/FlightNumber'
                originAirport:
                  $ref: '#/components/schemas/AirportSpec'
                destinationAirport:
                  $ref: '#/components/schemas/AirportSpec'
                fleet:
                  $ref: '#/components/schemas/FleetSpec'
                startDate:
                  $ref: '#/components/schemas/LocalDate'
                endDate:
                  $ref: '#/components/schemas/LocalDate'
                daysOfWeek:
                  $ref: '#/components/schemas/DaysOfWeek'
                departureTime:
                  $ref: '#/components/schemas/TimeOfDay'
                durationSec:
                  type: integer
                published:
                type: boolean
                default: false
         mileageReward:
            type: integer
            description: The number of airline miles/points earned for this flight
            default: 0
              required:
                - airline
                - number
                - originAirport
                - destinationAirport
                - fleet
                - startDate
                - endDate
                - daysOfWeek
                - departureTime
                - durationSec
      responses:
        '201':
          description: Schedule created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Invalid request
    delete:
      operationId: deleteAllSchedules
      summary: Delete all schedules
      responses:
        '204':
          description: All schedules deleted
  /schedules/{id}:
    get:
      operationId: getSchedule
      summary: Get schedule by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Schedule found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          description: Schedule not found
    patch:
      operationId: updateSchedule
      summary: Update schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  $ref: '#/components/schemas/FlightNumber'
                originAirport:
                  $ref: '#/components/schemas/AirportSpec'
                destinationAirport:
                  $ref: '#/components/schemas/AirportSpec'
                fleet:
                  $ref: '#/components/schemas/FleetSpec'
                startDate:
                  $ref: '#/components/schemas/LocalDate'
                endDate:
                  $ref: '#/components/schemas/LocalDate'
                daysOfWeek:
                  $ref: '#/components/schemas/DaysOfWeek'
                departureTime:
                  $ref: '#/components/schemas/TimeOfDay'
                durationSec:
                  type: integer
                published:
                  type: boolean
      responses:
        '200':
          description: Schedule updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          description: Schedule not found
    delete:
      operationId: deleteSchedule
      summary: Delete a schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Schedule deleted
        '404':
          description: Schedule not found
  /schedules/{id}/flights:
    get:
      operationId: listFlightsForSchedule
      summary: Get flights defined by a schedule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of flights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
        '404':
          description: Schedule not found
  /flights:
    get:
      operationId: listFlights
      summary: List all flights
      responses:
        '200':
          description: List of flights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
    post:
      operationId: createFlight
      summary: Create a new single flight from manual input, not from a schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                airline:
                  $ref: '#/components/schemas/AirlineSpec'
                number:
                  $ref: '#/components/schemas/FlightNumber'
                originAirport:
                  $ref: '#/components/schemas/AirportSpec'
                destinationAirport:
                  $ref: '#/components/schemas/AirportSpec'
                fleet:
                  $ref: '#/components/schemas/FleetSpec'
                aircraft:
                  $ref: '#/components/schemas/AircraftSpec'
                departureDateTime:
                  $ref: '#/components/schemas/ZonedDateTime'
                arrivalDateTime:
                  $ref: '#/components/schemas/ZonedDateTime'
                notes:
                  type: string
                published:
                  type: boolean
                  default: false
              required:
                - airline
                - number
                - originAirport
                - destinationAirport
                - fleet
                - departureDateTime
                - arrivalDateTime
                - notes
      responses:
        '201':
          description: Flight created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '400':
          description: Invalid request
  /flights/{id}:
    get:
      operationId: getFlight
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Flight found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '404':
          description: Flight not found
    patch:
      operationId: updateFlight
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  $ref: '#/components/schemas/FlightNumber'
                originAirport:
                  $ref: '#/components/schemas/AirportSpec'
                destinationAirport:
                  $ref: '#/components/schemas/AirportSpec'
                fleet:
                  $ref: '#/components/schemas/FleetSpec'
                aircraft:
                  $ref: '#/components/schemas/AircraftSpec'
                departureDateTime:
                  $ref: '#/components/schemas/ZonedDateTime'
                arrivalDateTime:
                  $ref: '#/components/schemas/ZonedDateTime'
                notes:
                  type: string
                published:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Flight updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '400':
          description: Flight created from schedule can't update fields set by the schedule. Edit the schedule instead.
        '404':
          description: Flight not found
    delete:
      operationId: deleteFlight
      summary: Delete a flight created from manual input
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Flight deleted
        '400':
          description: Flight created from a schedule can't be deleted. Edit the schedule instead.
        '404':
          description: Flight not found
  /flights/{flightID}/seat-assignments:
    get:
      operationId: listSeatAssignmentsForFlight
      summary: Get seat assignments for a flight
      parameters:
        - name: flightID
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Seat assignments found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SeatAssignment'
        '404':
          description: Flight not found
    post:
      operationId: createSeatAssignment
      summary: Create a seat assignment for a flight
      parameters:
        - name: flightID
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itineraryID:
                  $ref: '#/components/schemas/ItineraryID'
                passengerID:
                  type: integer
                seat:
                  $ref: '#/components/schemas/SeatNumber'
              required:
                - itineraryID
                - passengerID
                - seat
      responses:
        '201':
          description: Seat assignment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeatAssignment'
        '400':
          description: Invalid request
        '404':
          description: Flight not found
  /passengers:
    get:
      operationId: listPassengers
      summary: List all passengers
      responses:
        '200':
          description: List of passengers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Passenger'
    post:
      operationId: createPassenger
      summary: Create a new passenger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
              required:
                - name
      responses:
        '201':
          description: Passenger created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        '400':
          description: Invalid request
  /passengers/{id}:
    get:
      operationId: getPassenger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Passenger found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        '404':
          description: Passenger not found
  /passengers/{id}/loyalty-programs:
    get:
      operationId: listPassengerAirlineLoyalties
      summary: List all loyalty programs for a passenger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of loyalty programs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirlineLoyalty'
        '404':
          description: Passenger not found
  /airline-loyalty-programs:
    get:
      operationId: listAirlineLoyalties
      summary: List all airline loyalty programs
      responses:
        '200':
          description: List of airline loyalty programs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirlineLoyalty'
  /airline-loyalty-programs/{id}:
    get:
      operationId: getAirlineLoyalty
      summary: Get a specific airline loyalty program
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Airline loyalty program found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirlineLoyalty'
        '404':
          description: Airline loyalty program not found
  /add-loyalty-miles:
    post:
      operationId: addLoyaltyMiles
      summary: Add miles to a passenger's loyalty account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                airline:
                  $ref: '#/components/schemas/AirlineSpec'
                passengerId:
                  type: integer
                miles:
                  type: integer
              required:
                - airline
                - passengerId
                - miles
      responses:
        '200':
          description: Miles added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirlineLoyalty'
        '404':
          description: Airline or passenger not found
    patch:
      operationId: updatePassenger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Passenger updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        '400':
          description: Invalid request
        '404':
          description: Passenger not found
    delete:
      operationId: deletePassenger
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Passenger deleted
        '404':
          description: Passenger not found
  /itineraries:
    get:
      operationId: listItineraries
      summary: List all itineraries
      responses:
        '200':
          description: List of itineraries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Itinerary'
    post:
      operationId: createItinerary
      summary: Create a new itinerary from manual input, not from a schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                flightIDs:
                  type: array
                  items:
                    type: integer
                  minLength: 1
                passengerIDs:
                  type: array
                  items:
                    type: integer
                  minLength: 1
              required:
                - flightIDs
                - passengerIDs
      responses:
        '201':
          description: Itinerary created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '400':
          description: Invalid request
  /itineraries/{itinerarySpec}:
    get:
      operationId: getItinerary
      parameters:
        - $ref: '#/components/parameters/itinerarySpec'
      responses:
        '200':
          description: Itinerary found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        '404':
          description: Itinerary not found
    delete:
      operationId: deleteItinerary
      summary: Delete an itinerary
      parameters:
        - $ref: '#/components/parameters/itinerarySpec'
      responses:
        '204':
          description: Itinerary deleted
        '404':
          description: Itinerary not found
  /routes:
    get:
      operationId: listRoutes
      summary: List all routes
      responses:
        '200':
          description: List of routes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Route'
  /routes/{route}:
    get:
      operationId: getRoute
      summary: Get route by IATA codes of origin and destination airports
      parameters:
        - $ref: '#/components/parameters/routeSpec'
      responses:
        '200':
          description: Route information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
        '404':
          description: Route not found
  /routes/{route}/schedules:
    get:
      operationId: listSchedulesByRoute
      summary: List schedules for a route
      parameters:
        - $ref: '#/components/parameters/routeSpec'
      responses:
        '200':
          description: List of schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
        '404':
          description: Route not found
  /routes/{route}/flights:
    get:
      operationId: listFlightsByRoute
      summary: List flights for a route
      parameters:
        - $ref: '#/components/parameters/routeSpec'
      responses:
        '200':
          description: List of flights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
        '404':
          description: Route not found
components:
  parameters:
    aircraftSpec:
      name: aircraftSpec
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AircraftSpec'
    airlineSpec:
      name: airlineSpec
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AirlineSpec'
    fleetSpec:
      name: fleetSpec
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/FleetSpec'
    airportSpec:
      name: airportSpec
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/AirportSpec'
    itinerarySpec:
      name: itinerarySpec
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/ItinerarySpec'
    routeSpec:
      name: route
      in: path
      required: true
      schema:
        type: string
        pattern: '^[A-Z]{3}-[A-Z]{3}$'
  schemas:
    ZonedDateTime:
      type: string
      description: An [RFC 9557](https://www.rfc-editor.org/rfc/rfc9557.html) date-time string, with a time zone name, such as "2021-11-07T00:45[America/Los_Angeles]" or "2021-11-07T00:45-07:00[America/Los_Angeles]".
      format: date-time
      x-go-type: zonedtime.ZonedTime
      x-go-type-import:
        path: github.com/stellora/airline/api-server/zonedtime
        name: zonedtime
    AircraftID:
      type: integer
    AircraftRegistration:
      type: string
      description: Registration code for an aircraft. See https://en.wikipedia.org/wiki/List_of_aircraft_registration_prefixes.
      pattern: '^[A-Z][A-Z0-9-]{1,12}$'
      minLength: 2
      maxLength: 13
    AircraftSpec:
      oneOf:
        - $ref: '#/components/schemas/AircraftID'
        - $ref: '#/components/schemas/AircraftRegistration'
    Aircraft:
      type: object
      properties:
        id:
          type: integer
        registration:
          $ref: '#/components/schemas/AircraftRegistration'
        aircraftType:
          $ref: '#/components/schemas/AircraftTypeICAOCode'
        airline:
          $ref: '#/components/schemas/Airline'
      required:
        - id
        - registration
        - aircraftType
        - airline
    AircraftTypeICAOCode:
      type: string
      description: ICAO aircraft type code for an aircraft. See https://en.wikipedia.org/wiki/List_of_aircraft_type_designators.
      pattern: '^[A-Z][A-Z0-9]{1,3}$'
      minLength: 2
      maxLength: 4
    AircraftType:
      type: object
      properties:
        icaoCode:
          $ref: '#/components/schemas/AircraftTypeICAOCode'
        name:
          type: string
      required:
        - icaoCode
        - name
    AirlineID:
      type: integer
    AirlineIATACode:
      type: string
      description: IATA code for airline
      pattern: '^[A-Z0-9]{2}$'
      minLength: 2
      maxLength: 2
    AirlineSpec:
      oneOf:
        - $ref: '#/components/schemas/AirlineID'
        - $ref: '#/components/schemas/AirlineIATACode'
    Airline:
      type: object
      properties:
        id:
          type: integer
        iataCode:
          $ref: '#/components/schemas/AirlineIATACode'
        name:
          type: string
      required:
        - id
        - iataCode
        - name
    FleetID:
      type: integer
      description: A numeric identifier for the fleet that is globally unique.
    FleetCode:
      type: string
      description: A short identifier for the fleet that is unique within the airline.
      pattern: '^[A-Z][A-Z0-9-]{0,9}$'
      minLength: 1
      maxLength: 10
    FleetSpec:
      oneOf:
        - $ref: '#/components/schemas/FleetID'
        - $ref: '#/components/schemas/FleetCode'
    Fleet:
      type: object
      description: A fleet is a set of aircraft (owned by the same airline) with common characteristics.
      properties:
        id:
          $ref: '#/components/schemas/FleetID'
        airline:
          $ref: '#/components/schemas/Airline'
        code:
          $ref: '#/components/schemas/FleetCode'
        description:
          type: string
      required:
        - id
        - code
        - description
        - airline
    AirportID:
      type: integer
    AirportIATACode:
      type: string
      description: IATA code for airport
      pattern: '^[A-Z]{3}$'
      minLength: 3
      maxLength: 3
    AirportSpec:
      oneOf:
        - $ref: '#/components/schemas/AirportID'
        - $ref: '#/components/schemas/AirportIATACode'
    Airport:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        iataCode:
          $ref: '#/components/schemas/AirportIATACode'
        country:
          type: string
        region:
          type: string        
        point:
          $ref: '#/components/schemas/Point'
        timezoneID:
          type: string
          description: Tz database ID for the timezone of the airport, such as "America/New_York". See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
      required:
        - id
        - name
        - iataCode
        - country
        - region
        - point
        - timezoneID
    Point:
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
      required:
        - longitude
        - latitude
    LocalDate:
      type: string
      description: A date in YYYY-MM-DD format, with no timezone (timezone-naive).
      pattern: '^\d{4}-\d{2}-\d{2}$'
    DaysOfWeek:
      type: array
      items:
        type: integer
        enum: [0, 1, 2, 3, 4, 5, 6]
        description: 0 = Sunday, 1 = Monday, ..., 6 = Saturday
      minItems: 0
      maxItems: 7
      uniqueItems: true
    TimeOfDay:
      type: string
      description: A local time of day with hours and minutes (e.g., "7:30" or "21:45"), without a date or timezone.
      pattern: '[0-2]?\d:[0-5]\d'
    Schedule:
      type: object
      properties:
        id:
          type: integer
        airline:
          $ref: '#/components/schemas/Airline'
        number:
          $ref: '#/components/schemas/FlightNumber'
        originAirport:
          $ref: '#/components/schemas/Airport'
        destinationAirport:
          $ref: '#/components/schemas/Airport'
        distanceMiles:
          type: number
          format: double
        fleet:
          $ref: '#/components/schemas/Fleet'
        startDate:
          $ref: '#/components/schemas/LocalDate'
        endDate:
          $ref: '#/components/schemas/LocalDate'
        daysOfWeek:
          $ref: '#/components/schemas/DaysOfWeek'
        departureTime:
          $ref: '#/components/schemas/TimeOfDay'
        durationSec:
          type: integer
        published:
          type: boolean
      required:
        - id
        - airline
        - number
        - originAirport
        - destinationAirport
        - distanceMiles
        - fleet
        - startDate
        - endDate
        - daysOfWeek
        - departureTime
        - durationSec
        - published
    FlightNumber:
      type: string
      pattern: '^[0-9]{1,4}$'
      minLength: 1
      maxLength: 4
    Flight:
      type: object
      description: A single flight, either created and synced automatically from a schedule or created manually.
      properties:
        id:
          type: integer
        scheduleID:
          type: integer
        scheduleInstanceDate:
          $ref: '#/components/schemas/LocalDate'
        airline:
          $ref: '#/components/schemas/Airline'
        number:
          $ref: '#/components/schemas/FlightNumber'
        originAirport:
           $ref: '#/components/schemas/Airport'
        destinationAirport:
           $ref: '#/components/schemas/Airport'
        distanceMiles:
          type: number
          format: double
        fleet:
           $ref: '#/components/schemas/Fleet'
        aircraft:
           $ref: '#/components/schemas/Aircraft'
        departureDateTime:
           $ref: '#/components/schemas/ZonedDateTime'
        arrivalDateTime:
           $ref: '#/components/schemas/ZonedDateTime'
        notes:
           type: string
        published:
           type: boolean
           default: false
        mileageReward:
           type: integer
           description: The number of airline miles/points earned for this flight
           default: 0
      required:
        - id
        - airline
        - number
        - originAirport
        - destinationAirport
        - distanceMiles
        - fleet
        - departureDateTime
        - arrivalDateTime
        - notes
        - published
    Route:
      type: object
      properties:
        originAirport:
          $ref: '#/components/schemas/Airport'
        destinationAirport:
          $ref: '#/components/schemas/Airport'
        distanceMiles:
          type: number
          format: double
        schedulesCount:
          type: integer
      required:
        - originAirport
        - destinationAirport
        - distanceMiles
        - schedulesCount
    ItineraryID:
      type: integer
      description: A globally unique numeric identifier for an itinerary.
    RecordLocator:
      type: string
      pattern: '^[A-Z0-9]{6}$'
      minLength: 6
      maxLength: 6
      description: A globally unique record locator code for an itinerary.
    ItinerarySpec:
      oneOf:
        - $ref: '#/components/schemas/ItineraryID'
        - $ref: '#/components/schemas/RecordLocator'
    Itinerary:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ItineraryID'
        recordID:
          $ref: '#/components/schemas/RecordLocator'
        flights:
          type: array
          items:
            $ref: '#/components/schemas/Flight'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/Passenger'
          minItems: 1
      required:
        - id
        - recordID
        - flights
        - passengers
    ItinerarySpecs:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ItineraryID'
        recordID:
          $ref: '#/components/schemas/RecordLocator'
      required:
        - id
        - recordID
    Passenger:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
        - id
        - name
    SeatNumber:
      type: string
      pattern: '^[0-9]{1,2}[A-Z]$'
      minLength: 2
      maxLength: 3
    SeatAssignment:
      type: object
      properties:
        id:
          type: integer
        itinerary:
          $ref: '#/components/schemas/ItinerarySpecs'
        passenger:
          $ref: '#/components/schemas/Passenger'
        flightID:
          type: integer
        seat:
          $ref: '#/components/schemas/SeatNumber'
      required:
        - id
        - itinerary
        - passenger
        - flightID
        - seat
    AirlineLoyalty:
      type: object
      properties:
        id:
          type: integer
        airline:
          $ref: '#/components/schemas/Airline'
        passengerId:
          type: integer
        mileageBalance:
          type: integer
          description: The total number of miles/points accumulated
      required:
        - id
        - airline
        - passengerId
        - mileageBalance
